|ALU
A[0] => A[0].IN2
A[1] => A[1].IN2
A[2] => A[2].IN2
A[3] => A[3].IN2
B[0] => B[0].IN2
B[1] => B[1].IN2
B[2] => B[2].IN2
B[3] => B[3].IN2
ALU_selector[0] => ALU_selector[0].IN2
ALU_selector[1] => ALU_selector[1].IN2
ALU_selector[2] => ALU_selector[2].IN2
ALU_selector[3] => ALU_selector[3].IN2
trigger => trigger.IN1
reset => reset.IN1
CarryOut <= <GND>
Zero <= <GND>
Negative <= <GND>
Overflow <= <GND>
display1[0] <= <GND>
display1[1] <= <GND>
display1[2] <= <GND>
display1[3] <= <GND>
display1[4] <= <GND>
display1[5] <= <GND>
display1[6] <= <GND>
display2[0] <= <GND>
display2[1] <= <GND>
display2[2] <= <GND>
display2[3] <= <GND>
display2[4] <= <GND>
display2[5] <= <GND>
display2[6] <= <GND>
oper[0] <= Converter:converter.port1
oper[1] <= Converter:converter.port1
oper[2] <= Converter:converter.port1
oper[3] <= Converter:converter.port1
ALU_Out[0] <= Mux:mux_1.port13
ALU_Out[1] <= Mux:mux_1.port13
ALU_Out[2] <= Mux:mux_1.port13
ALU_Out[3] <= Mux:mux_1.port13


|ALU|Opcode:opcode0
push_button => switch_state~reg0.CLK
switch_state <= switch_state~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ALU|Opcode:opcode1
push_button => switch_state~reg0.CLK
switch_state <= switch_state~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ALU|Opcode:opcode2
push_button => switch_state~reg0.CLK
switch_state <= switch_state~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ALU|Opcode:opcode3
push_button => switch_state~reg0.CLK
switch_state <= switch_state~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ALU|Converter:converter
opcode[0] => func[0].DATAIN
opcode[1] => func[1].DATAIN
opcode[2] => func[2].DATAIN
opcode[3] => func[3].DATAIN
func[0] <= opcode[0].DB_MAX_OUTPUT_PORT_TYPE
func[1] <= opcode[1].DB_MAX_OUTPUT_PORT_TYPE
func[2] <= opcode[2].DB_MAX_OUTPUT_PORT_TYPE
func[3] <= opcode[3].DB_MAX_OUTPUT_PORT_TYPE


|ALU|Mux:mux_1
trigger => out_alu[0].LATCH_ENABLE
trigger => out_aluaux[3].LATCH_ENABLE
trigger => out_aluaux[2].LATCH_ENABLE
trigger => out_aluaux[1].LATCH_ENABLE
trigger => out_aluaux[0].LATCH_ENABLE
trigger => out_alu[3].LATCH_ENABLE
trigger => out_alu[2].LATCH_ENABLE
trigger => out_alu[1].LATCH_ENABLE
reset => out_alu[0].ACLR
reset => out_aluaux[3].ACLR
reset => out_aluaux[2].ACLR
reset => out_aluaux[1].ACLR
reset => out_aluaux[0].ACLR
reset => out_alu[3].ACLR
reset => out_alu[2].ACLR
reset => out_alu[1].ACLR
out_sum[0] => Mux3.IN0
out_sum[0] => Mux3.IN1
out_sum[0] => Mux3.IN2
out_sum[0] => Mux3.IN3
out_sum[0] => Mux3.IN4
out_sum[0] => Mux3.IN5
out_sum[0] => Mux3.IN6
out_sum[1] => Mux2.IN0
out_sum[1] => Mux2.IN1
out_sum[1] => Mux2.IN2
out_sum[1] => Mux2.IN3
out_sum[1] => Mux2.IN4
out_sum[1] => Mux2.IN5
out_sum[1] => Mux2.IN6
out_sum[2] => Mux1.IN0
out_sum[2] => Mux1.IN1
out_sum[2] => Mux1.IN2
out_sum[2] => Mux1.IN3
out_sum[2] => Mux1.IN4
out_sum[2] => Mux1.IN5
out_sum[2] => Mux1.IN6
out_sum[3] => Mux0.IN0
out_sum[3] => Mux0.IN1
out_sum[3] => Mux0.IN2
out_sum[3] => Mux0.IN3
out_sum[3] => Mux0.IN4
out_sum[3] => Mux0.IN5
out_sum[3] => Mux0.IN6
out_subs[0] => Mux3.IN7
out_subs[1] => Mux2.IN7
out_subs[2] => Mux1.IN7
out_subs[3] => Mux0.IN7
out_mult[0] => Mux3.IN8
out_mult[1] => Mux2.IN8
out_mult[2] => Mux1.IN8
out_mult[3] => Mux0.IN8
out_mult[4] => out_aluaux.DATAB
out_mult[5] => out_aluaux.DATAB
out_mult[6] => out_aluaux.DATAB
out_mult[7] => out_aluaux.DATAB
out_div[0] => Mux3.IN9
out_div[1] => Mux2.IN9
out_div[2] => Mux1.IN9
out_div[3] => Mux0.IN9
out_mod[0] => Mux3.IN10
out_mod[1] => Mux2.IN10
out_mod[2] => Mux1.IN10
out_mod[3] => Mux0.IN10
out_and[0] => Mux3.IN11
out_and[1] => Mux2.IN11
out_and[2] => Mux1.IN11
out_and[3] => Mux0.IN11
out_or[0] => Mux3.IN12
out_or[1] => Mux2.IN12
out_or[2] => Mux1.IN12
out_or[3] => Mux0.IN12
out_xor[0] => Mux3.IN13
out_xor[1] => Mux2.IN13
out_xor[2] => Mux1.IN13
out_xor[3] => Mux0.IN13
out_shiftl[0] => Mux3.IN14
out_shiftl[1] => Mux2.IN14
out_shiftl[2] => Mux1.IN14
out_shiftl[3] => Mux0.IN14
out_shiftr[0] => Mux3.IN15
out_shiftr[1] => Mux2.IN15
out_shiftr[2] => Mux1.IN15
out_shiftr[3] => Mux0.IN15
select[0] => Mux0.IN19
select[0] => Mux1.IN19
select[0] => Mux2.IN19
select[0] => Mux3.IN19
select[0] => Decoder0.IN3
select[1] => Mux0.IN18
select[1] => Mux1.IN18
select[1] => Mux2.IN18
select[1] => Mux3.IN18
select[1] => Decoder0.IN2
select[2] => Mux0.IN17
select[2] => Mux1.IN17
select[2] => Mux2.IN17
select[2] => Mux3.IN17
select[2] => Decoder0.IN1
select[3] => Mux0.IN16
select[3] => Mux1.IN16
select[3] => Mux2.IN16
select[3] => Mux3.IN16
select[3] => Decoder0.IN0
out[0] <= out_alu[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out_alu[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out_alu[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out_alu[3].DB_MAX_OUTPUT_PORT_TYPE
out_aux[0] <= out_aluaux[0].DB_MAX_OUTPUT_PORT_TYPE
out_aux[1] <= out_aluaux[1].DB_MAX_OUTPUT_PORT_TYPE
out_aux[2] <= out_aluaux[2].DB_MAX_OUTPUT_PORT_TYPE
out_aux[3] <= out_aluaux[3].DB_MAX_OUTPUT_PORT_TYPE


|ALU|AND_gate:andgate
a[0] => out.IN0
a[1] => out.IN0
a[2] => out.IN0
a[3] => out.IN0
b[0] => out.IN1
b[1] => out.IN1
b[2] => out.IN1
b[3] => out.IN1
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE


|ALU|OR_gate:orgate
a[0] => out.IN0
a[1] => out.IN0
a[2] => out.IN0
a[3] => out.IN0
b[0] => out.IN1
b[1] => out.IN1
b[2] => out.IN1
b[3] => out.IN1
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE


